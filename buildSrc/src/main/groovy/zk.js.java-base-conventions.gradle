/*
 * Copyright 2023 zoukang, All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'java'
    id 'checkstyle'
    id 'pmd'
    id 'io.github.tmzk1005.java-formatter'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

checkstyle {
    configFile = rootProject.file('qa/checkstyle/checkstyle.xml')
}

pmd {
    consoleOutput = true
    toolVersion = "6.55.0"
    ruleSets = []
    ruleSetFiles = files(rootProject.file('qa/pmd/pmd-java-rules.xml'))
}

formatter {
    importOrder = ["java", "javax", "", "zk.js", "#"]
}

def lombokVersion = "1.18.26"
def jacksonVersion = "2.15.1"
def slf4jApiVersion = "1.7.36"
def log4j2Version = "2.20.0"
def junitJupiterVersion = "5.9.3"
def jgroupsVersion = "5.2.16.Final"
def jgroupsRaftVersion = "1.0.11.Final"

dependencies {
    implementation platform("org.projectlombok:lombok:${lombokVersion}")
    implementation platform("com.fasterxml.jackson:jackson-bom:${jacksonVersion}")
    implementation platform("org.slf4j:slf4j-api:${slf4jApiVersion}")
    implementation platform("org.apache.logging.log4j:log4j-bom:${log4j2Version}")

    implementation platform("org.jgroups:jgroups:${jgroupsVersion}")
    implementation platform("org.jgroups:jgroups-raft:${jgroupsRaftVersion}")

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter:${junitJupiterVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"

    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
}

tasks.named('test', Test) {
    useJUnitPlatform()
    maxHeapSize = '1G'

    testLogging {
        events "passed", "failed", "skipped", "standardOut", "standardError"
        exceptionFormat "short"
        showCauses true
    }
}

